# look for an existing Aurora DB instance for this host using the AWS CLI
- name: check for Aurora DB instance
  command: aws rds describe-db-instances --filters Name=db-instance-id,Values={{ aurora_db_name }} --region {{ aws_region }}
  changed_when: false
  register: aurora_instance_query

- name: parse Aurora DB instance query
  set_fact:
    aurora_instance: "{{ aurora_instance_query.stdout | from_json | json_query('DBInstances[0]')}}"

# create the instance if it doesn't exist -- passing config as JSON from a Jinja2 template
- name: create Aurora DB instance
  command: aws rds create-db-instance --region {{ aws_region }} --cli-input-json '{{ lookup('template', 'files/create-db-instance.json.j2') | to_json }}'
  when: aurora_instance == ''
  register: aurora_instance_create
